# Compilar y enlazar:
# as -o hello2.o hello2.s
# ld -o hello2 hello2.o
# Copia del bueno

.data 

    buffer: .skip 1024
    file:   .string "/etc/passwd"
    msg:    .string "\n"


.text

.global _start


_start:

    # OPEN /etc/passwd:
    mov $2, %rax            # rax = 2
    mov $file, %rdi         # rdi = /etc/passwd
    mov $0644, %rsi         # rsi = 0644
    mov $0, %rdx            # rdx = lectura = 0
    syscall

    mov %rax, %r8           # r8 = rax = fd
    cmp $0, %r8              
    jl error                # Si r8 < 0 -> error


        
loop:                       
    # BUCLE


    # READ /etc/passwd:     
    mov $0, %rax            # rax = 0
    mov %r8, %rdi           # rdi = fd
    mov $buffer, %rsi       # rsi = buffer
    mov $1024, %rdx         # rdx = 1024
    syscall 

    mov %rax, %r9           # r9 = rax = nr (leído)
    cmp $0, %r9             # Si devuelvo -1 error.
    jl error

    
    # WRITE:
    mov   $1, %rax          # rax = 1 
    mov   $1, %rdi          # rdi = 1 (stdout)
    mov   $buffer, %rsi     # rsi = buffer
    mov   %r9, %rdx         # rdx = nr (leído) = r9
    syscall           
   
    

	cmp $0, %r9             # Condición de bucle. Paro cuando haya leído todo.
    ja loop                 # Si r9 > 0 -> loop

    
    # FIN BUCLE


    # Salto de línea:
    mov   $1, %rax    
    mov   $1, %rdi    
    mov   $msg, %rsi  
    mov   $1, %rdx   
    syscall 

    # EXIT:
    mov	$60, %rax           # rax = 60
	mov	$0, %rdi            # code = 0 
	syscall



error:

    mov	$60, %rax           # rax = 60
	mov	$1, %rdi            # code = 1
	syscall



