# as -o hello.o hello.s
# ld -o hello hello.o


.data 
    buffer: .space 10


.text

.global _start


_start:

    # Leo cadena estandar:
    mov $0, %rax
    mov $0, %rdi
    mov $buffer, %rsi       # se carga la dirección de buffer en rsi
    mov $10, %rdx        # número máximo de caracteres que se leerán
    syscall 
    
    # Imprimo cadena estandar:
    mov   $1, %rax    # RAX holds syscall 1 (write).
    mov   $1, %rdi    # RDI holds file descriptor 1
    mov   $buffer, %rsi  # RSI holds the address of our string buffer.
    mov   $10, %rdx    # RDX holds the size our of string buffer.
    syscall           # Invoke a syscall with these arguments.

    mov   $60, %rax   # Now we are invoking syscall 60, exit.
    mov   $0, %rdi    # Zero out RDI, which holds the exit status. 
    syscall           # Call the system again to exit.


