

.data

buffer: .skip 1024

file:	.string "/etc/passwd" # Nose si es .ascii
.text

.globl _start

_start:

	# abrimos el fichero '/etc/passwd'
    
	mov $2, %rax		# 1 es el código de 'open'
	mov $file, %rdi	# 1 es el nombre del fichero.
	mov $0, %rsi		# puntero al mensaje a escribir
	syscall		# ejecuta la llamada

	
	# Leemos el fichero '/etc/passwd'
loop:
	mov	$0, %rax	# 0 is read
	mov	$1, %rdi
	mov	$msg, %rsi
	mov	$6, %rdx
	syscall
	subq	$1, cont	# Resta 1 a cont
	jnz	loop 
	syscall

	# preparamos llamada 'write'
    
	mov $1, %rax               # 1 es el código de 'write'
	mov $1, %rdi               # 1 es el descriptor 'stdout'
	mov $message, %rsi         # puntero al mensaje a escribir
	mov $message_len, %rdx     # longitud del mensaje
	syscall                     # ejecuta la llamada

    
	# preparamos llamada 'exit'
	mov $60, %rax              # 1 es el código de 'exit'
	mov $0, %rdi               # el valor de retorno es 0 (todo correcto)
	syscall                     # ejecuta la llamada


